{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/1.png","path":"img/1.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/2.png","path":"img/2.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/3.png","path":"img/3.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"01c085fac5c1cb19e79a4f0f60547fc036c821f2","modified":1641294498485},{"_id":"source/_posts/.DS_Store","hash":"c9871579b6da196ef7f9e2860540611a24d43b14","modified":1641282366701},{"_id":"source/_posts/C语言开发环境.md","hash":"5be0499208a8ded4d7cf7ce1175a63af229944c8","modified":1641286914885},{"_id":"source/_posts/python库安装.md","hash":"62b262f9ad0598414e9ec780896ef997708e517a","modified":1641286406868},{"_id":"source/about/index.md","hash":"aa79fd58946aa0fe4f1496a4eddd21ef9568153f","modified":1641272109114},{"_id":"source/_posts/hello-world.md","hash":"d4e42e7c4a3e25e532ae768d384efe4df0a9c2a6","modified":1641282464989},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1640938356000},{"_id":"themes/fluid/.DS_Store","hash":"b6f6ab911ef3587acc14062e8d86df6a96f1597f","modified":1641294498487},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1640938356000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1640938356000},{"_id":"themes/fluid/README.md","hash":"03cfa8e5f149514b57ef80dcb84eb7fea261370d","modified":1640938356000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1640938356000},{"_id":"themes/fluid/package.json","hash":"4e3992cacd64c6888218b0346283258e8f82a27d","modified":1640938356000},{"_id":"themes/fluid/README_en.md","hash":"ca8fd19a4948de1f253616a62c0e8a7d81f692f5","modified":1640938356000},{"_id":"themes/fluid/.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1640938356000},{"_id":"themes/fluid/LICENSE","hash":"df5b54be535593d5442cebafbea34eb9bd69b987","modified":1640938356000},{"_id":"themes/fluid/_config.yml","hash":"74e4f02bac14c9dfe8f915517eaf486757cf7b88","modified":1641292700122},{"_id":"themes/fluid/layout/about.ejs","hash":"ad6fed7b646d3ca961db83db0fbe020e3a5d42ad","modified":1640938356000},{"_id":"themes/fluid/layout/archive.ejs","hash":"472d0813ca5b88000a7bc6039f33b7e27b5a3216","modified":1640938356000},{"_id":"themes/fluid/beifen.txt","hash":"d7428a52de49db4769f737e29741888b530fb408","modified":1641283747423},{"_id":"themes/fluid/layout/category.ejs","hash":"58291dfec65c36889dfce0ddc603540b67e4c598","modified":1640938356000},{"_id":"themes/fluid/layout/links.ejs","hash":"2a7b49f0f9aecf07550b5a0b99242aab5654cf2b","modified":1640938356000},{"_id":"themes/fluid/layout/categories.ejs","hash":"20c2a195a109d2a263b5fa6e79cbcc62932508ad","modified":1640938356000},{"_id":"themes/fluid/layout/post.ejs","hash":"79e3679a7069351a6172c281b9d09f59d7580484","modified":1640938356000},{"_id":"themes/fluid/layout/tag.ejs","hash":"0ad89eb7c92a822980fa9a85285e6d94ad845d1d","modified":1640938356000},{"_id":"themes/fluid/languages/de.yml","hash":"13a6a799415fc2f6f69ebd1a399fb44426a5d641","modified":1640938356000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7f566edf750241e62d7c54abfbb0c504fdab850a","modified":1640938356000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1640938356000},{"_id":"themes/fluid/languages/en.yml","hash":"a85dcc5cc21f9cab50df31e5001b8818ee62d1e2","modified":1640938356000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"21307b4137c3d9b04bb58243747e75af0abc5a71","modified":1640938356000},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"1a6d415446da11dee5c5f400e7d67544fbe743ea","modified":1640938356000},{"_id":"themes/fluid/layout/page.ejs","hash":"1014b901d396f4fc445cb1ffc938d5380d894d71","modified":1640938356000},{"_id":"themes/fluid/languages/eo.yml","hash":"a0c7984495d4f2d33b64adfa33adebbf768a5ac3","modified":1640938356000},{"_id":"themes/fluid/languages/ja.yml","hash":"91020031a847c0361a6fd7ab990c7be4bf17529b","modified":1640938356000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"af977ed0792508bb0766ea8afe82d34ef1e8fb3c","modified":1640938356000},{"_id":"themes/fluid/scripts/events/index.js","hash":"44faef3e77ab08b91e4c5c6f1cd9087a9faff443","modified":1640938356000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":1640938356000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1640938356000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1640938356000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1640938356000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"6c37e9f1ac1d6d00b3c32794e02e244dba942cd9","modified":1640938356000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1640938356000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"cde964c8cd3217268a231de5e018a62c53c2e047","modified":1640938356000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1640938356000},{"_id":"themes/fluid/layout/404.ejs","hash":"689d9f4efd2a7f5edfd9b24561a7ade69d46617c","modified":1640938356000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"3aa5b4ea879cd34d3a32468d88da18d72cbcc8e0","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"b917b893b1777e6ffcb53188f9f5644510e5f20d","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"63468f7875c09d9557fe8315afc97175745d9087","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1640938356000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"649457796374c79e49a19bd541e4ad8e78fe8995","modified":1640938356000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1640938356000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1640938356000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16d33eb89ecf90f4046720fde5395d972c7ba1fd","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/beian.ejs","hash":"58b4bbe36386de4305a8da5ffd7d56802df23049","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/css.ejs","hash":"c363829a4b80f74fc1c565e41f6dab41c95006ea","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/archive-list.ejs","hash":"53a4f6029373a40394a87aba9284696a71610f90","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/footer.ejs","hash":"a62278c38a310da495d96c39abacacef266945cb","modified":1640938356000},{"_id":"themes/fluid/layout/index.ejs","hash":"f3ae4395e751c4a02d5895e07856b1e8edfdda08","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/head.ejs","hash":"f7f3494ed001e8cdcdc3e8a1d2cd1195cff2ded5","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/post-meta.ejs","hash":"32a17edadeed40da6db21d2d8031bd47d2fc9bf4","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/toc.ejs","hash":"3d2fb5552f373e5a0c56bc356702d807bcbcb411","modified":1640938356000},{"_id":"themes/fluid/source/.DS_Store","hash":"8c5e144265943f212ed44836c3f571da5cf1495f","modified":1641294498478},{"_id":"themes/fluid/layout/_partial/nav.ejs","hash":"e71b3c4aa263163597d31b1f91e5a1a877084cfd","modified":1640938356000},{"_id":"themes/fluid/source/css/main.styl","hash":"d5a8a59c8d1fd17d699a951e59c4ce9ae44c419d","modified":1640938356000},{"_id":"themes/fluid/source/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1640938356000},{"_id":"themes/fluid/source/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1640938356000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"f1fdd512f3ef92ff5db4a49f5a3143d5ddea9858","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/scripts.ejs","hash":"0ee838b6fcd895d21a29d9d67dbb99b752d623d1","modified":1640938356000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1640938356000},{"_id":"themes/fluid/source/css/.DS_Store","hash":"455e95b133fe9ef54d9a62b105d53d7b03be9b69","modified":1641271642334},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1640938356000},{"_id":"themes/fluid/source/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1640938356000},{"_id":"themes/fluid/source/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1640938356000},{"_id":"themes/fluid/source/img/.DS_Store","hash":"c44def4d4062088d0d29e422c1273f2118fde27c","modified":1641271663041},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1640938356000},{"_id":"themes/fluid/source/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1640938356000},{"_id":"themes/fluid/source/img/2.png","hash":"61ecd845c4d1562b4c145572e90f8975fe7712a0","modified":1641272199334},{"_id":"themes/fluid/source/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"b5fd5a2d9c463eb59318af0f47c591c485b6ad27","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"3b2abc5f5e3b681874637e98e047dc4969eb1983","modified":1640938356000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"53987b7a668ea0623370eb83ed5311766221b557","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"28e186c32576eb3d5d923273471a001c47fe8071","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"fd5fcb6a61ad865197a778eeae889b80484227dd","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"c1db1a4f9eca6e36b660530641e3a4fb6a30c8d8","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1640938356000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1640938356000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/utterances.ejs","hash":"e1ed6530dfd7310f91060a75766a93ac3c39be3a","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/valine.ejs","hash":"4052ab2a8f78efa92f0fe17abe8f66135943390a","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/waline.ejs","hash":"21e00443054802e893aac1f668b69d5bb4b39b3a","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":1640938356000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/math.ejs","hash":"df6941bd3b860180d01fd39ee859ed2d42f4d1f0","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/analytics.ejs","hash":"557077a8825fffc0a2c7fe2b29f319287950244f","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/typed.ejs","hash":"e8e01c5db46b383748855452aecd70fcda99f598","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1640938356000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1640938356000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"80098e8354069631bde8edcd1181a53091a92949","modified":1640938356000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"08b455b848b21d57e0563b87071c4bae2b63bafe","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/.DS_Store","hash":"3bffb0e28496861ce2d56520a5744df040d5d034","modified":1641271647357},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"c2d8bfd04bf0734b387c049402b46a06a05fc582","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/twikoo.ejs","hash":"1af53bc0be642610a3a4d4e7c05287854a821508","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"6e6f22b664199772370b59ce1678b0c148b5849f","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_post/post.styl","hash":"5e86487de0f16c30ca3e16460ab94b57620e31c5","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"d547ab0b91f84eb0acd0bc0c5d716ce17c30361a","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_post/tag_plugin.styl","hash":"b89b96c8a6a433a6f372b42710554b05cab85a24","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"7e32a3268accf3d524209c213e15e2d5d5e2e1a6","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"30f8fab95a5214d79df0ccc02b937df8bd885676","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"616c1f7147078c3d532dd1cfd2af09c0c3a816f0","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"32d90bcc8bf2fd5d8d78e86a567973d4b69bcfa1","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"9f932ca3f9625c13aa5353f58319881e62c0c653","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/rewrite.styl","hash":"a2993f23701de9a83e3f428300e62c5c52b4ff4b","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"55e10a6965462f8f62f85e75fd5e143af02a4b44","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"0ce7552dc4993926426019398d73e817cfd841a1","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"d8011325756eb6e4ce619b3e7b4d6d80c2de8a57","modified":1640938356000},{"_id":"themes/fluid/source/img/3.png","hash":"b141e55205e71395f7ad5b219b9bdc1d403d36c3","modified":1641282221851},{"_id":"themes/fluid/source/img/1.png","hash":"117e7bc8a67def71c6ce0712cf0010fd0e5307f4","modified":1641270869231},{"_id":"public/local-search.xml","hash":"6da03a7ad737de5726a9a940580b9581e7cf3f42","modified":1641288088729},{"_id":"public/about/index.html","hash":"bf41fead1bf6c865f6089127f2a2f838a52de3a7","modified":1641292632366},{"_id":"public/archives/2019/index.html","hash":"7c6367159a364d45a4bec2e68ec6752dd78e2e45","modified":1641292632366},{"_id":"public/archives/index.html","hash":"0d8d7c629a154574a537362311767433f5794af8","modified":1641292632366},{"_id":"public/archives/2019/10/index.html","hash":"20e9de5a3e6f92616b317b7e65506aef612230ac","modified":1641292632366},{"_id":"public/archives/2022/index.html","hash":"09045ea443e37baf8716d0089a7a3636c1655dd7","modified":1641292632366},{"_id":"public/archives/2022/01/index.html","hash":"103ebbf40f64f78075420342c86252f3445c4307","modified":1641292632366},{"_id":"public/categories/董晨乐/index.html","hash":"7ee6d0d4b16e4c554b7c74b2c852dc5661bebbf5","modified":1641292632366},{"_id":"public/categories/董晨乐/小董同学/index.html","hash":"7156735a6d0f0f053423207563bd4f0ae2301430","modified":1641292632366},{"_id":"public/index.html","hash":"1e6acd594665cd0c3b60ebd071bc099e5b29a21a","modified":1641302988599},{"_id":"public/2022/01/04/C语言开发环境/index.html","hash":"ae743a3b559e4507f61a790c7b5f43f3788ec18a","modified":1641303141718},{"_id":"public/2022/01/04/python库安装/index.html","hash":"03d34eb3dd7107b4e63fe012870c62e3f0b0c9e2","modified":1641302988599},{"_id":"public/2019/10/10/hello-world/index.html","hash":"ec916ba57b7af58dd303425cc512e026188c979a","modified":1641302988599},{"_id":"public/tags/Hexo/index.html","hash":"2b8b738e8ec8b96f65e22a31c4c1cde50a148879","modified":1641292632366},{"_id":"public/tags/Fluid/index.html","hash":"07452ceb4276278b3560a633c077156c2f913433","modified":1641292632366},{"_id":"public/tags/小董同学/index.html","hash":"dbd97bed87793c8c6225915fd0dc46b519197be8","modified":1641292632366},{"_id":"public/tags/index.html","hash":"2d9f4fceef82ed84336f1e26399acf94425caba1","modified":1641292632366},{"_id":"public/categories/index.html","hash":"0e474cb9819a2ff56330d714768bffcfa2cf10c8","modified":1641292632366},{"_id":"public/links/index.html","hash":"714524ae460165e01925bac755825b47889f89ec","modified":1641292632366},{"_id":"public/404.html","hash":"199d7f582b37e2e0eae2067aaa2874aa475302cf","modified":1641292632366},{"_id":"public/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1641288088729},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1641288088729},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1641288088729},{"_id":"public/img/2.png","hash":"61ecd845c4d1562b4c145572e90f8975fe7712a0","modified":1641288088729},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1641288088729},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1641288088729},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1641288088729},{"_id":"public/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1641288088729},{"_id":"public/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1641288088729},{"_id":"public/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1641288088729},{"_id":"public/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1641288088729},{"_id":"public/js/color-schema.js","hash":"f1fdd512f3ef92ff5db4a49f5a3143d5ddea9858","modified":1641288088729},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1641288088729},{"_id":"public/js/leancloud.js","hash":"53987b7a668ea0623370eb83ed5311766221b557","modified":1641288088729},{"_id":"public/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1641288088729},{"_id":"public/css/main.css","hash":"63bc59b8ca4b03afa2b93883143c349d461b1052","modified":1641288088729},{"_id":"public/img/3.png","hash":"b141e55205e71395f7ad5b219b9bdc1d403d36c3","modified":1641288088729},{"_id":"public/img/1.png","hash":"117e7bc8a67def71c6ce0712cf0010fd0e5307f4","modified":1641288088729}],"Category":[{"name":"董晨乐","_id":"ckxzwjui30003px6368rv2sfc"},{"name":"小董同学","parent":"ckxzwjui30003px6368rv2sfc","_id":"ckxzwjui50008px632k5a1wj1"}],"Data":[],"Page":[{"title":"标题","layout":"about","_content":"\n这里可以写正文，支持 Markdown, HTML","source":"about/index.md","raw":"---\ntitle: 标题\nlayout: about\n---\n\n这里可以写正文，支持 Markdown, HTML","date":"2022-01-04T04:55:09.114Z","updated":"2022-01-04T04:55:09.114Z","path":"about/index.html","comments":1,"_id":"ckxzwjuhz0000px633b9g777t","content":"<p>这里可以写正文，支持 Markdown, HTML</p>\n","site":{"data":{}},"wordcount":23,"excerpt":"","more":"<p>这里可以写正文，支持 Markdown, HTML</p>\n"}],"Post":[{"title":"C开发环境 适用于VS CODE 编辑器","_content":"\n# [C开发环境 适用于VS CODE 编辑器](https://zhuanlan.zhihu.com/p/77074009)\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123019.png)\n\n> 写在前面。本文是**小白启蒙文**，但并不能保证每词每句都极度通俗，仍然**有些专业概念因限于篇幅不能详解**。\n>\n> 细节在编程这项活计中极具影响力，小白因背景知识薄弱而经常踩坑实属难免，但**错误也是学习的重要途经**，学会从错误中反省与学习是非常优秀的品质，与诸君共勉。\n\n------------\n\n所需文件：https://xxgn.lanzous.com/ijSNAe79mmj（速度很快不需要科学上网）\n\n### 1、安装MinGW-w64编译器套件\n\n要编写C/C++这样的静态语言程序，**必备工具**是一套可用的**编译器**。\n\n> 编译器：它是能**将你的源代码翻译成计算机可直接执行的程序文件**（Windows上即.exe文件）的**程序**。高级程序语言的一大特点是代码具有跨平台性，但不同的硬件和操作系统底层可直接执行的指令显然各不相同，这就决定了我们需要不同的编译器。\n\n本文提到的**MinGW-w64**是一个著名项目为**Windows 64位**平台提供的一套编译器，它也**受到了微软官方文档的推荐**，相关文件托管在SourceForge的网站上，下载地址为https://sourceforge.net/projects/mingw-w64/files/\n\n> 至于Linux和Mac，这里限于篇幅不可能详解，但它们安装编译器都可以直接利用命令行中的包管理器完成，可自行百度“Linux 安装gcc”“Mac 安装clang”。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123320.png)\n\n下载下来是个几十MB的压缩文件，后缀名为\".7z\"，需要支持该格式的压缩软件进行解压。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123445.png)\n\n打开bin文件夹你可以看到很多应用程序，其中就有**gcc**、**g++**等著名的编译器。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123506.png)\n\n### 2、环境变量添加\n\n**为使外部程序或用户（也就是你）能访问到这些编译器**，需要**把它们所在的目录**（我这里就是`C:\\mingw64\\bin`，可在上图中点击地址栏进行复制）**添加到环境变量Path中**。按快捷键【Windows徽标】+【S】打开Win10搜索框，输入“环境变量”，在弹出的两个匹配结果中，选择“编辑**账户**的环境变量”（两个匹配项很相似别点错了！之所以选它是防止你误改系统变量损害系统）。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123557.png)\n\n点击上面的用户变量Path，选择“编辑”，或者直接双击（不要去动下面的系统变量！）\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123613.png)\n\n然后**点击下方空白处**，把刚才那堆应用程序所在的目录（我的是`C:\\mingw64\\bin\\`）添加进去（建议添加在下面，**不要覆盖或修改已有内容**，然后选中它将其上移至顶），**注意结尾是bin，别输掉了**；或者选择“浏览”找到bin文件夹，然后一路确定退出。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123621.png)\n\n### 3、验证操作\n\n最后为了验证之前操作是否正确，我们需要实际访问一下那些编译器。还是在搜索框中，输入“cmd”，启动“命令提示符”，在命令窗口中输入以下命令并回车\n\n```powershell\ngcc --version\n```\n\n如果结果如图所示，你的编译器就安装成功了。如果失败，请**回头检查你添加的路径是否生效且与实际相符**；或者请卸载你参考其他教程安装的老式MinGW编译器并清除其添加在Path中的路径。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123724.png)\n\n### 4、Vs Code 配置\n\n> 文本编辑器是写代码的**辅助工具**，它原则上不是必需品，也不为特定编程语言服务。原则上只要是能编写**纯文本文件**的软件（最简单如Windows记事本），都可以编写**任何语言**的代码。但考虑到实际的编程体验，众多专用的编辑器被开发出来，以提供**代码高亮**（根据特定语言的语法给代码染色，便于阅读）、**语法错误检查**（在编译前提示错字漏字、不合规的语句等错误）、**断点调试**、**多文件的管理**等辅助功能。\n\n注意VS Code跟VS (Visual Studio)只是同属一家、名称相近，但不是一类软件别搞错了。\n\n这里要区分集成开发环境和开发环境\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123843.png)\n\n修改完环境变量、安装或更新完插件后，务必**重启VS Code**。这类属于编辑器环境的东西，大都需重启软件才能生效。\n\n## 配置C/C++的简单环境（重启VS Code后进行！）\n\n这里实际上就是VS Code的具体用法，原则上并无固定章法，但几个基本点有必要提及一下：\n\n1. 脑子里要有**源代码文件**这个概念。写程序不是说就在框框里写一堆代码然后就能跑了！代码都要**写成文件保存起来（到硬盘里）**，然后才有后续的工作；\n2. VS Code是支持多语言的编辑器，并不只为C/C++服务，所以还要**确保把代码文件的后缀名写对**，C语言的后缀名是`.c`，C++的是`.cpp`。这是VS Code区分你代码类型的标志；\n3. 上面安装的\"C/C++\"插件提供了对这两门语言的基本支持。C跟C++是**两门不同的语言**，请**向你的老师问清楚学的是哪一门**。无论是在.c文件里敲C++代码，还是在.cpp文件里敲C代码，都是自掘天坑的行为。\n4. 编写C/C++程序有两个基本步骤，一是把代码文件变成程序文件，这叫**编译**或**生成**，是调用最开始安装的编译器做的事；二才是把刚刚生成的程序跑起来，这叫**执行**，是操作系统做的事；\n5. 这两个基本步骤，一般都是在**命令行**的环境下进行，输入输出也是在这里面。VS Code的优势之一，就是把系统的命令行集成进了软件内部，名唤“**终端**”，从而不必再开新窗口。\n\n进入正题，在VS Code中编写C/C++程序，**不要直接新建个代码文件就开始写**，应该先选择左侧“资源管理器”（两页纸的图标）后按下图操作，\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123956.png)\n\n或者选择菜单项【文件】→【打开文件夹…】，来**打开一个工作文件夹**，这样做的好处包括\n\n- **VS Code中打开的一个文件夹下可以包含你一个项目或一段时期内的各种文件**，便于我们分门别类、有序地组织代码；\n- **这个文件夹内可以保存独立的配置**（自动创建子目录`.vscode`保存配置文件，能随工作文件夹一起移动），仅在这个区域内生效而不修改用户个人的全局配置，也不会与其他文件夹的配置相冲突。对于\"C/C++\"插件这是必需的；\n- **VS Code的集成终端在打开的文件夹内自动以该文件夹为启动目录**，这样在里面编译和执行程序时可以方便地使用**相对路径**。\n\n> **路径**是对计算机中文件和文件夹的指示，是编译和执行程序的**必备基础知识**，如有疑问请参阅以下[扫盲贴，](https://zhuanlan.zhihu.com/p/85455028)\n\n找到一个你觉得合适的**文件夹**打开后，你的侧边栏会变成这样\n\n> 注意！请务必确定选择的是“打开文件夹”而非“打开工作区”，工作区具备更强的独立特性，本文的配置方法是不适用的！\n> 第一次打开时可能会自动下载\"C/C++\"插件的额外组件（3个），请务必确认它们下载安装成功。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124122.png)\n\n### 4、UI配置\n\n接下来，是要利用\"C/C++\"插件预定义好了的配置，稍作修改以满足我们的需要。按快捷键【Ctrl】【Shift】+【P】，打开命令面板，输入关键词\"C/C++\"，在弹出的诸命令中选择**编辑配置 (UI)**或者**Edit Configurations (UI)**，将弹出\"C/C++\"给我们的默认配置（JSON那个操作难度较大，有兴趣的可自行研究）。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124154.png)\n\n诸配置中最重要的是**编译器路径**和**IntelliSense模式**这两项，两者在右侧都有下拉三角。如果前面你正确配置了环境变量，路径的待选项中就会包含几个正确的编译器路径，**编写C程序请选择gcc.exe，C++则选择g++.exe**；模式选择**gcc-x64**。\n\n> 配置完成后你可以看到一个`c_cpp_properties.json`文件被自动保存在了`.vscode`子目录中，它只在你这个工作文件夹中生效。如果你使用一个新的工作文件夹，就重新配置一下。\n\n\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124212.png)\n\n> 注意`.vscode`是你工作文件夹的子目录，下次打开时注意打开的是上一级工作文件夹（比如我上面的MYCLANG，别开到`.vscode`里面去了！\n\n至此配置工作已基本完成\n\n### 5、编译测试（建议重启PC）\n\n## 编写\"Hello World\"程序\n\n到工作文件夹中添加一个源代码文件，命名为hello**.c**（或者任意你喜欢的名字，但注意后缀名.c别忘了打上），\n\n> 我这里的示例是C语言的，要试用C++的请注意后缀名为.cpp，并求教你的老师或自行编写相应代码。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124350.png)\n\n输完你的代码后，按快捷键【Ctrl】+【S】\n\n### **保**存、\n\n### 保存、\n\n### 保存！\n\n保存后按快捷键【Ctrl】+【`】（主键盘区左上角Esc键下面那个）即可打开嵌入式终端（命令行环境），**编译代码的命令**为（如果是C++则将gcc替换为g++）\n\n```text\ngcc˽-o˽目标文件路径˽源代码文件路径\n```\n\n我用符号`˽`标记了空格，“目标文件”即你要生成的程序文件，起名和加不加.exe都随意（因为它会自动加）。在我们这，由于已经在打开的文件夹里，可以使用相对路径，\n\n```text\ngcc -o .\\myhello .\\hello.c\n```\n\n回车，就能编译你刚刚的hello.c文件，如果成功，则在相同目录下生成一个myhello.exe程序文件。**执行程序**的命令为\n\n```text\n程序文件路径\n```\n\n是的形式上就是这样，只是路径可以是绝对或相对的，当然相对的一般更方便，这里要执行上面的程序就是\n\n```text\n.\\myhello.exe\n```\n\n注意VS Code的默认终端实际上是**PowerShell，需要使用`.\\`显式地指明它是当前目录下的可执行文件**，如果省略它出于安全原因会拒绝你程序的执行。","source":"_posts/C语言开发环境.md","raw":"---\ntitle: C开发环境 适用于VS CODE 编辑器\ntags: [小董同学]\ncategories : [董晨乐, 小董同学]\n---\n\n# [C开发环境 适用于VS CODE 编辑器](https://zhuanlan.zhihu.com/p/77074009)\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123019.png)\n\n> 写在前面。本文是**小白启蒙文**，但并不能保证每词每句都极度通俗，仍然**有些专业概念因限于篇幅不能详解**。\n>\n> 细节在编程这项活计中极具影响力，小白因背景知识薄弱而经常踩坑实属难免，但**错误也是学习的重要途经**，学会从错误中反省与学习是非常优秀的品质，与诸君共勉。\n\n------------\n\n所需文件：https://xxgn.lanzous.com/ijSNAe79mmj（速度很快不需要科学上网）\n\n### 1、安装MinGW-w64编译器套件\n\n要编写C/C++这样的静态语言程序，**必备工具**是一套可用的**编译器**。\n\n> 编译器：它是能**将你的源代码翻译成计算机可直接执行的程序文件**（Windows上即.exe文件）的**程序**。高级程序语言的一大特点是代码具有跨平台性，但不同的硬件和操作系统底层可直接执行的指令显然各不相同，这就决定了我们需要不同的编译器。\n\n本文提到的**MinGW-w64**是一个著名项目为**Windows 64位**平台提供的一套编译器，它也**受到了微软官方文档的推荐**，相关文件托管在SourceForge的网站上，下载地址为https://sourceforge.net/projects/mingw-w64/files/\n\n> 至于Linux和Mac，这里限于篇幅不可能详解，但它们安装编译器都可以直接利用命令行中的包管理器完成，可自行百度“Linux 安装gcc”“Mac 安装clang”。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123320.png)\n\n下载下来是个几十MB的压缩文件，后缀名为\".7z\"，需要支持该格式的压缩软件进行解压。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123445.png)\n\n打开bin文件夹你可以看到很多应用程序，其中就有**gcc**、**g++**等著名的编译器。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123506.png)\n\n### 2、环境变量添加\n\n**为使外部程序或用户（也就是你）能访问到这些编译器**，需要**把它们所在的目录**（我这里就是`C:\\mingw64\\bin`，可在上图中点击地址栏进行复制）**添加到环境变量Path中**。按快捷键【Windows徽标】+【S】打开Win10搜索框，输入“环境变量”，在弹出的两个匹配结果中，选择“编辑**账户**的环境变量”（两个匹配项很相似别点错了！之所以选它是防止你误改系统变量损害系统）。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123557.png)\n\n点击上面的用户变量Path，选择“编辑”，或者直接双击（不要去动下面的系统变量！）\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123613.png)\n\n然后**点击下方空白处**，把刚才那堆应用程序所在的目录（我的是`C:\\mingw64\\bin\\`）添加进去（建议添加在下面，**不要覆盖或修改已有内容**，然后选中它将其上移至顶），**注意结尾是bin，别输掉了**；或者选择“浏览”找到bin文件夹，然后一路确定退出。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123621.png)\n\n### 3、验证操作\n\n最后为了验证之前操作是否正确，我们需要实际访问一下那些编译器。还是在搜索框中，输入“cmd”，启动“命令提示符”，在命令窗口中输入以下命令并回车\n\n```powershell\ngcc --version\n```\n\n如果结果如图所示，你的编译器就安装成功了。如果失败，请**回头检查你添加的路径是否生效且与实际相符**；或者请卸载你参考其他教程安装的老式MinGW编译器并清除其添加在Path中的路径。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123724.png)\n\n### 4、Vs Code 配置\n\n> 文本编辑器是写代码的**辅助工具**，它原则上不是必需品，也不为特定编程语言服务。原则上只要是能编写**纯文本文件**的软件（最简单如Windows记事本），都可以编写**任何语言**的代码。但考虑到实际的编程体验，众多专用的编辑器被开发出来，以提供**代码高亮**（根据特定语言的语法给代码染色，便于阅读）、**语法错误检查**（在编译前提示错字漏字、不合规的语句等错误）、**断点调试**、**多文件的管理**等辅助功能。\n\n注意VS Code跟VS (Visual Studio)只是同属一家、名称相近，但不是一类软件别搞错了。\n\n这里要区分集成开发环境和开发环境\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123843.png)\n\n修改完环境变量、安装或更新完插件后，务必**重启VS Code**。这类属于编辑器环境的东西，大都需重启软件才能生效。\n\n## 配置C/C++的简单环境（重启VS Code后进行！）\n\n这里实际上就是VS Code的具体用法，原则上并无固定章法，但几个基本点有必要提及一下：\n\n1. 脑子里要有**源代码文件**这个概念。写程序不是说就在框框里写一堆代码然后就能跑了！代码都要**写成文件保存起来（到硬盘里）**，然后才有后续的工作；\n2. VS Code是支持多语言的编辑器，并不只为C/C++服务，所以还要**确保把代码文件的后缀名写对**，C语言的后缀名是`.c`，C++的是`.cpp`。这是VS Code区分你代码类型的标志；\n3. 上面安装的\"C/C++\"插件提供了对这两门语言的基本支持。C跟C++是**两门不同的语言**，请**向你的老师问清楚学的是哪一门**。无论是在.c文件里敲C++代码，还是在.cpp文件里敲C代码，都是自掘天坑的行为。\n4. 编写C/C++程序有两个基本步骤，一是把代码文件变成程序文件，这叫**编译**或**生成**，是调用最开始安装的编译器做的事；二才是把刚刚生成的程序跑起来，这叫**执行**，是操作系统做的事；\n5. 这两个基本步骤，一般都是在**命令行**的环境下进行，输入输出也是在这里面。VS Code的优势之一，就是把系统的命令行集成进了软件内部，名唤“**终端**”，从而不必再开新窗口。\n\n进入正题，在VS Code中编写C/C++程序，**不要直接新建个代码文件就开始写**，应该先选择左侧“资源管理器”（两页纸的图标）后按下图操作，\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123956.png)\n\n或者选择菜单项【文件】→【打开文件夹…】，来**打开一个工作文件夹**，这样做的好处包括\n\n- **VS Code中打开的一个文件夹下可以包含你一个项目或一段时期内的各种文件**，便于我们分门别类、有序地组织代码；\n- **这个文件夹内可以保存独立的配置**（自动创建子目录`.vscode`保存配置文件，能随工作文件夹一起移动），仅在这个区域内生效而不修改用户个人的全局配置，也不会与其他文件夹的配置相冲突。对于\"C/C++\"插件这是必需的；\n- **VS Code的集成终端在打开的文件夹内自动以该文件夹为启动目录**，这样在里面编译和执行程序时可以方便地使用**相对路径**。\n\n> **路径**是对计算机中文件和文件夹的指示，是编译和执行程序的**必备基础知识**，如有疑问请参阅以下[扫盲贴，](https://zhuanlan.zhihu.com/p/85455028)\n\n找到一个你觉得合适的**文件夹**打开后，你的侧边栏会变成这样\n\n> 注意！请务必确定选择的是“打开文件夹”而非“打开工作区”，工作区具备更强的独立特性，本文的配置方法是不适用的！\n> 第一次打开时可能会自动下载\"C/C++\"插件的额外组件（3个），请务必确认它们下载安装成功。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124122.png)\n\n### 4、UI配置\n\n接下来，是要利用\"C/C++\"插件预定义好了的配置，稍作修改以满足我们的需要。按快捷键【Ctrl】【Shift】+【P】，打开命令面板，输入关键词\"C/C++\"，在弹出的诸命令中选择**编辑配置 (UI)**或者**Edit Configurations (UI)**，将弹出\"C/C++\"给我们的默认配置（JSON那个操作难度较大，有兴趣的可自行研究）。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124154.png)\n\n诸配置中最重要的是**编译器路径**和**IntelliSense模式**这两项，两者在右侧都有下拉三角。如果前面你正确配置了环境变量，路径的待选项中就会包含几个正确的编译器路径，**编写C程序请选择gcc.exe，C++则选择g++.exe**；模式选择**gcc-x64**。\n\n> 配置完成后你可以看到一个`c_cpp_properties.json`文件被自动保存在了`.vscode`子目录中，它只在你这个工作文件夹中生效。如果你使用一个新的工作文件夹，就重新配置一下。\n\n\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124212.png)\n\n> 注意`.vscode`是你工作文件夹的子目录，下次打开时注意打开的是上一级工作文件夹（比如我上面的MYCLANG，别开到`.vscode`里面去了！\n\n至此配置工作已基本完成\n\n### 5、编译测试（建议重启PC）\n\n## 编写\"Hello World\"程序\n\n到工作文件夹中添加一个源代码文件，命名为hello**.c**（或者任意你喜欢的名字，但注意后缀名.c别忘了打上），\n\n> 我这里的示例是C语言的，要试用C++的请注意后缀名为.cpp，并求教你的老师或自行编写相应代码。\n\n![](https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124350.png)\n\n输完你的代码后，按快捷键【Ctrl】+【S】\n\n### **保**存、\n\n### 保存、\n\n### 保存！\n\n保存后按快捷键【Ctrl】+【`】（主键盘区左上角Esc键下面那个）即可打开嵌入式终端（命令行环境），**编译代码的命令**为（如果是C++则将gcc替换为g++）\n\n```text\ngcc˽-o˽目标文件路径˽源代码文件路径\n```\n\n我用符号`˽`标记了空格，“目标文件”即你要生成的程序文件，起名和加不加.exe都随意（因为它会自动加）。在我们这，由于已经在打开的文件夹里，可以使用相对路径，\n\n```text\ngcc -o .\\myhello .\\hello.c\n```\n\n回车，就能编译你刚刚的hello.c文件，如果成功，则在相同目录下生成一个myhello.exe程序文件。**执行程序**的命令为\n\n```text\n程序文件路径\n```\n\n是的形式上就是这样，只是路径可以是绝对或相对的，当然相对的一般更方便，这里要执行上面的程序就是\n\n```text\n.\\myhello.exe\n```\n\n注意VS Code的默认终端实际上是**PowerShell，需要使用`.\\`显式地指明它是当前目录下的可执行文件**，如果省略它出于安全原因会拒绝你程序的执行。","slug":"C语言开发环境","published":1,"date":"2022-01-04T04:23:13.334Z","updated":"2022-01-04T09:01:54.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckxzwjui00001px63g2qf6wjc","content":"<h1 id=\"C开发环境-适用于VS-CODE-编辑器\"><a href=\"#C开发环境-适用于VS-CODE-编辑器\" class=\"headerlink\" title=\"C开发环境 适用于VS CODE 编辑器\"></a><a href=\"https://zhuanlan.zhihu.com/p/77074009\">C开发环境 适用于VS CODE 编辑器</a></h1><p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123019.png\"></p>\n<blockquote>\n<p>写在前面。本文是<strong>小白启蒙文</strong>，但并不能保证每词每句都极度通俗，仍然<strong>有些专业概念因限于篇幅不能详解</strong>。</p>\n<p>细节在编程这项活计中极具影响力，小白因背景知识薄弱而经常踩坑实属难免，但<strong>错误也是学习的重要途经</strong>，学会从错误中反省与学习是非常优秀的品质，与诸君共勉。</p>\n</blockquote>\n<hr>\n<p>所需文件：<a href=\"https://xxgn.lanzous.com/ijSNAe79mmj%EF%BC%88%E9%80%9F%E5%BA%A6%E5%BE%88%E5%BF%AB%E4%B8%8D%E9%9C%80%E8%A6%81%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%89\">https://xxgn.lanzous.com/ijSNAe79mmj（速度很快不需要科学上网）</a></p>\n<h3 id=\"1、安装MinGW-w64编译器套件\"><a href=\"#1、安装MinGW-w64编译器套件\" class=\"headerlink\" title=\"1、安装MinGW-w64编译器套件\"></a>1、安装MinGW-w64编译器套件</h3><p>要编写C/C++这样的静态语言程序，<strong>必备工具</strong>是一套可用的<strong>编译器</strong>。</p>\n<blockquote>\n<p>编译器：它是能<strong>将你的源代码翻译成计算机可直接执行的程序文件</strong>（Windows上即.exe文件）的<strong>程序</strong>。高级程序语言的一大特点是代码具有跨平台性，但不同的硬件和操作系统底层可直接执行的指令显然各不相同，这就决定了我们需要不同的编译器。</p>\n</blockquote>\n<p>本文提到的<strong>MinGW-w64</strong>是一个著名项目为<strong>Windows 64位</strong>平台提供的一套编译器，它也<strong>受到了微软官方文档的推荐</strong>，相关文件托管在SourceForge的网站上，下载地址为<a href=\"https://sourceforge.net/projects/mingw-w64/files/\">https://sourceforge.net/projects/mingw-w64/files/</a></p>\n<blockquote>\n<p>至于Linux和Mac，这里限于篇幅不可能详解，但它们安装编译器都可以直接利用命令行中的包管理器完成，可自行百度“Linux 安装gcc”“Mac 安装clang”。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123320.png\"></p>\n<p>下载下来是个几十MB的压缩文件，后缀名为”.7z”，需要支持该格式的压缩软件进行解压。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123445.png\"></p>\n<p>打开bin文件夹你可以看到很多应用程序，其中就有<strong>gcc</strong>、**g++**等著名的编译器。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123506.png\"></p>\n<h3 id=\"2、环境变量添加\"><a href=\"#2、环境变量添加\" class=\"headerlink\" title=\"2、环境变量添加\"></a>2、环境变量添加</h3><p><strong>为使外部程序或用户（也就是你）能访问到这些编译器</strong>，需要<strong>把它们所在的目录</strong>（我这里就是<code>C:\\mingw64\\bin</code>，可在上图中点击地址栏进行复制）<strong>添加到环境变量Path中</strong>。按快捷键【Windows徽标】+【S】打开Win10搜索框，输入“环境变量”，在弹出的两个匹配结果中，选择“编辑<strong>账户</strong>的环境变量”（两个匹配项很相似别点错了！之所以选它是防止你误改系统变量损害系统）。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123557.png\"></p>\n<p>点击上面的用户变量Path，选择“编辑”，或者直接双击（不要去动下面的系统变量！）</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123613.png\"></p>\n<p>然后<strong>点击下方空白处</strong>，把刚才那堆应用程序所在的目录（我的是<code>C:\\mingw64\\bin\\</code>）添加进去（建议添加在下面，<strong>不要覆盖或修改已有内容</strong>，然后选中它将其上移至顶），<strong>注意结尾是bin，别输掉了</strong>；或者选择“浏览”找到bin文件夹，然后一路确定退出。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123621.png\"></p>\n<h3 id=\"3、验证操作\"><a href=\"#3、验证操作\" class=\"headerlink\" title=\"3、验证操作\"></a>3、验证操作</h3><p>最后为了验证之前操作是否正确，我们需要实际访问一下那些编译器。还是在搜索框中，输入“cmd”，启动“命令提示符”，在命令窗口中输入以下命令并回车</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs powershell\">gcc -<span class=\"hljs-literal\">-version</span><br></code></pre></td></tr></table></figure>\n\n<p>如果结果如图所示，你的编译器就安装成功了。如果失败，请<strong>回头检查你添加的路径是否生效且与实际相符</strong>；或者请卸载你参考其他教程安装的老式MinGW编译器并清除其添加在Path中的路径。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123724.png\"></p>\n<h3 id=\"4、Vs-Code-配置\"><a href=\"#4、Vs-Code-配置\" class=\"headerlink\" title=\"4、Vs Code 配置\"></a>4、Vs Code 配置</h3><blockquote>\n<p>文本编辑器是写代码的<strong>辅助工具</strong>，它原则上不是必需品，也不为特定编程语言服务。原则上只要是能编写<strong>纯文本文件</strong>的软件（最简单如Windows记事本），都可以编写<strong>任何语言</strong>的代码。但考虑到实际的编程体验，众多专用的编辑器被开发出来，以提供<strong>代码高亮</strong>（根据特定语言的语法给代码染色，便于阅读）、<strong>语法错误检查</strong>（在编译前提示错字漏字、不合规的语句等错误）、<strong>断点调试</strong>、<strong>多文件的管理</strong>等辅助功能。</p>\n</blockquote>\n<p>注意VS Code跟VS (Visual Studio)只是同属一家、名称相近，但不是一类软件别搞错了。</p>\n<p>这里要区分集成开发环境和开发环境</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123843.png\"></p>\n<p>修改完环境变量、安装或更新完插件后，务必<strong>重启VS Code</strong>。这类属于编辑器环境的东西，大都需重启软件才能生效。</p>\n<h2 id=\"配置C-C-的简单环境（重启VS-Code后进行！）\"><a href=\"#配置C-C-的简单环境（重启VS-Code后进行！）\" class=\"headerlink\" title=\"配置C/C++的简单环境（重启VS Code后进行！）\"></a>配置C/C++的简单环境（重启VS Code后进行！）</h2><p>这里实际上就是VS Code的具体用法，原则上并无固定章法，但几个基本点有必要提及一下：</p>\n<ol>\n<li>脑子里要有<strong>源代码文件</strong>这个概念。写程序不是说就在框框里写一堆代码然后就能跑了！代码都要<strong>写成文件保存起来（到硬盘里）</strong>，然后才有后续的工作；</li>\n<li>VS Code是支持多语言的编辑器，并不只为C/C++服务，所以还要<strong>确保把代码文件的后缀名写对</strong>，C语言的后缀名是<code>.c</code>，C++的是<code>.cpp</code>。这是VS Code区分你代码类型的标志；</li>\n<li>上面安装的”C/C++”插件提供了对这两门语言的基本支持。C跟C++是<strong>两门不同的语言</strong>，请<strong>向你的老师问清楚学的是哪一门</strong>。无论是在.c文件里敲C++代码，还是在.cpp文件里敲C代码，都是自掘天坑的行为。</li>\n<li>编写C/C++程序有两个基本步骤，一是把代码文件变成程序文件，这叫<strong>编译</strong>或<strong>生成</strong>，是调用最开始安装的编译器做的事；二才是把刚刚生成的程序跑起来，这叫<strong>执行</strong>，是操作系统做的事；</li>\n<li>这两个基本步骤，一般都是在<strong>命令行</strong>的环境下进行，输入输出也是在这里面。VS Code的优势之一，就是把系统的命令行集成进了软件内部，名唤“<strong>终端</strong>”，从而不必再开新窗口。</li>\n</ol>\n<p>进入正题，在VS Code中编写C/C++程序，<strong>不要直接新建个代码文件就开始写</strong>，应该先选择左侧“资源管理器”（两页纸的图标）后按下图操作，</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123956.png\"></p>\n<p>或者选择菜单项【文件】→【打开文件夹…】，来<strong>打开一个工作文件夹</strong>，这样做的好处包括</p>\n<ul>\n<li><strong>VS Code中打开的一个文件夹下可以包含你一个项目或一段时期内的各种文件</strong>，便于我们分门别类、有序地组织代码；</li>\n<li><strong>这个文件夹内可以保存独立的配置</strong>（自动创建子目录<code>.vscode</code>保存配置文件，能随工作文件夹一起移动），仅在这个区域内生效而不修改用户个人的全局配置，也不会与其他文件夹的配置相冲突。对于”C/C++”插件这是必需的；</li>\n<li><strong>VS Code的集成终端在打开的文件夹内自动以该文件夹为启动目录</strong>，这样在里面编译和执行程序时可以方便地使用<strong>相对路径</strong>。</li>\n</ul>\n<blockquote>\n<p><strong>路径</strong>是对计算机中文件和文件夹的指示，是编译和执行程序的<strong>必备基础知识</strong>，如有疑问请参阅以下<a href=\"https://zhuanlan.zhihu.com/p/85455028\">扫盲贴，</a></p>\n</blockquote>\n<p>找到一个你觉得合适的<strong>文件夹</strong>打开后，你的侧边栏会变成这样</p>\n<blockquote>\n<p>注意！请务必确定选择的是“打开文件夹”而非“打开工作区”，工作区具备更强的独立特性，本文的配置方法是不适用的！<br>第一次打开时可能会自动下载”C/C++”插件的额外组件（3个），请务必确认它们下载安装成功。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124122.png\"></p>\n<h3 id=\"4、UI配置\"><a href=\"#4、UI配置\" class=\"headerlink\" title=\"4、UI配置\"></a>4、UI配置</h3><p>接下来，是要利用”C/C++”插件预定义好了的配置，稍作修改以满足我们的需要。按快捷键【Ctrl】【Shift】+【P】，打开命令面板，输入关键词”C/C++”，在弹出的诸命令中选择**编辑配置 (UI)<strong>或者</strong>Edit Configurations (UI)**，将弹出”C/C++”给我们的默认配置（JSON那个操作难度较大，有兴趣的可自行研究）。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124154.png\"></p>\n<p>诸配置中最重要的是<strong>编译器路径</strong>和<strong>IntelliSense模式</strong>这两项，两者在右侧都有下拉三角。如果前面你正确配置了环境变量，路径的待选项中就会包含几个正确的编译器路径，<strong>编写C程序请选择gcc.exe，C++则选择g++.exe</strong>；模式选择<strong>gcc-x64</strong>。</p>\n<blockquote>\n<p>配置完成后你可以看到一个<code>c_cpp_properties.json</code>文件被自动保存在了<code>.vscode</code>子目录中，它只在你这个工作文件夹中生效。如果你使用一个新的工作文件夹，就重新配置一下。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124212.png\"></p>\n<blockquote>\n<p>注意<code>.vscode</code>是你工作文件夹的子目录，下次打开时注意打开的是上一级工作文件夹（比如我上面的MYCLANG，别开到<code>.vscode</code>里面去了！</p>\n</blockquote>\n<p>至此配置工作已基本完成</p>\n<h3 id=\"5、编译测试（建议重启PC）\"><a href=\"#5、编译测试（建议重启PC）\" class=\"headerlink\" title=\"5、编译测试（建议重启PC）\"></a>5、编译测试（建议重启PC）</h3><h2 id=\"编写”Hello-World”程序\"><a href=\"#编写”Hello-World”程序\" class=\"headerlink\" title=\"编写”Hello World”程序\"></a>编写”Hello World”程序</h2><p>到工作文件夹中添加一个源代码文件，命名为hello**.c**（或者任意你喜欢的名字，但注意后缀名.c别忘了打上），</p>\n<blockquote>\n<p>我这里的示例是C语言的，要试用C++的请注意后缀名为.cpp，并求教你的老师或自行编写相应代码。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124350.png\"></p>\n<p>输完你的代码后，按快捷键【Ctrl】+【S】</p>\n<h3 id=\"保存、\"><a href=\"#保存、\" class=\"headerlink\" title=\"保存、\"></a><strong>保</strong>存、</h3><h3 id=\"保存、-1\"><a href=\"#保存、-1\" class=\"headerlink\" title=\"保存、\"></a>保存、</h3><h3 id=\"保存！\"><a href=\"#保存！\" class=\"headerlink\" title=\"保存！\"></a>保存！</h3><p>保存后按快捷键【Ctrl】+【`】（主键盘区左上角Esc键下面那个）即可打开嵌入式终端（命令行环境），<strong>编译代码的命令</strong>为（如果是C++则将gcc替换为g++）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">gcc˽-o˽目标文件路径˽源代码文件路径<br></code></pre></td></tr></table></figure>\n\n<p>我用符号<code>˽</code>标记了空格，“目标文件”即你要生成的程序文件，起名和加不加.exe都随意（因为它会自动加）。在我们这，由于已经在打开的文件夹里，可以使用相对路径，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">gcc -o .\\myhello .\\hello.c<br></code></pre></td></tr></table></figure>\n\n<p>回车，就能编译你刚刚的hello.c文件，如果成功，则在相同目录下生成一个myhello.exe程序文件。<strong>执行程序</strong>的命令为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">程序文件路径<br></code></pre></td></tr></table></figure>\n\n<p>是的形式上就是这样，只是路径可以是绝对或相对的，当然相对的一般更方便，这里要执行上面的程序就是</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">.\\myhello.exe<br></code></pre></td></tr></table></figure>\n\n<p>注意VS Code的默认终端实际上是<strong>PowerShell，需要使用<code>.\\</code>显式地指明它是当前目录下的可执行文件</strong>，如果省略它出于安全原因会拒绝你程序的执行。</p>\n","site":{"data":{}},"wordcount":3542,"excerpt":"","more":"<h1 id=\"C开发环境-适用于VS-CODE-编辑器\"><a href=\"#C开发环境-适用于VS-CODE-编辑器\" class=\"headerlink\" title=\"C开发环境 适用于VS CODE 编辑器\"></a><a href=\"https://zhuanlan.zhihu.com/p/77074009\">C开发环境 适用于VS CODE 编辑器</a></h1><p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123019.png\"></p>\n<blockquote>\n<p>写在前面。本文是<strong>小白启蒙文</strong>，但并不能保证每词每句都极度通俗，仍然<strong>有些专业概念因限于篇幅不能详解</strong>。</p>\n<p>细节在编程这项活计中极具影响力，小白因背景知识薄弱而经常踩坑实属难免，但<strong>错误也是学习的重要途经</strong>，学会从错误中反省与学习是非常优秀的品质，与诸君共勉。</p>\n</blockquote>\n<hr>\n<p>所需文件：<a href=\"https://xxgn.lanzous.com/ijSNAe79mmj%EF%BC%88%E9%80%9F%E5%BA%A6%E5%BE%88%E5%BF%AB%E4%B8%8D%E9%9C%80%E8%A6%81%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%89\">https://xxgn.lanzous.com/ijSNAe79mmj（速度很快不需要科学上网）</a></p>\n<h3 id=\"1、安装MinGW-w64编译器套件\"><a href=\"#1、安装MinGW-w64编译器套件\" class=\"headerlink\" title=\"1、安装MinGW-w64编译器套件\"></a>1、安装MinGW-w64编译器套件</h3><p>要编写C/C++这样的静态语言程序，<strong>必备工具</strong>是一套可用的<strong>编译器</strong>。</p>\n<blockquote>\n<p>编译器：它是能<strong>将你的源代码翻译成计算机可直接执行的程序文件</strong>（Windows上即.exe文件）的<strong>程序</strong>。高级程序语言的一大特点是代码具有跨平台性，但不同的硬件和操作系统底层可直接执行的指令显然各不相同，这就决定了我们需要不同的编译器。</p>\n</blockquote>\n<p>本文提到的<strong>MinGW-w64</strong>是一个著名项目为<strong>Windows 64位</strong>平台提供的一套编译器，它也<strong>受到了微软官方文档的推荐</strong>，相关文件托管在SourceForge的网站上，下载地址为<a href=\"https://sourceforge.net/projects/mingw-w64/files/\">https://sourceforge.net/projects/mingw-w64/files/</a></p>\n<blockquote>\n<p>至于Linux和Mac，这里限于篇幅不可能详解，但它们安装编译器都可以直接利用命令行中的包管理器完成，可自行百度“Linux 安装gcc”“Mac 安装clang”。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123320.png\"></p>\n<p>下载下来是个几十MB的压缩文件，后缀名为”.7z”，需要支持该格式的压缩软件进行解压。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123445.png\"></p>\n<p>打开bin文件夹你可以看到很多应用程序，其中就有<strong>gcc</strong>、**g++**等著名的编译器。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123506.png\"></p>\n<h3 id=\"2、环境变量添加\"><a href=\"#2、环境变量添加\" class=\"headerlink\" title=\"2、环境变量添加\"></a>2、环境变量添加</h3><p><strong>为使外部程序或用户（也就是你）能访问到这些编译器</strong>，需要<strong>把它们所在的目录</strong>（我这里就是<code>C:\\mingw64\\bin</code>，可在上图中点击地址栏进行复制）<strong>添加到环境变量Path中</strong>。按快捷键【Windows徽标】+【S】打开Win10搜索框，输入“环境变量”，在弹出的两个匹配结果中，选择“编辑<strong>账户</strong>的环境变量”（两个匹配项很相似别点错了！之所以选它是防止你误改系统变量损害系统）。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123557.png\"></p>\n<p>点击上面的用户变量Path，选择“编辑”，或者直接双击（不要去动下面的系统变量！）</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123613.png\"></p>\n<p>然后<strong>点击下方空白处</strong>，把刚才那堆应用程序所在的目录（我的是<code>C:\\mingw64\\bin\\</code>）添加进去（建议添加在下面，<strong>不要覆盖或修改已有内容</strong>，然后选中它将其上移至顶），<strong>注意结尾是bin，别输掉了</strong>；或者选择“浏览”找到bin文件夹，然后一路确定退出。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123621.png\"></p>\n<h3 id=\"3、验证操作\"><a href=\"#3、验证操作\" class=\"headerlink\" title=\"3、验证操作\"></a>3、验证操作</h3><p>最后为了验证之前操作是否正确，我们需要实际访问一下那些编译器。还是在搜索框中，输入“cmd”，启动“命令提示符”，在命令窗口中输入以下命令并回车</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">gcc -<span class=\"hljs-literal\">-version</span><br></code></pre></td></tr></table></figure>\n\n<p>如果结果如图所示，你的编译器就安装成功了。如果失败，请<strong>回头检查你添加的路径是否生效且与实际相符</strong>；或者请卸载你参考其他教程安装的老式MinGW编译器并清除其添加在Path中的路径。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123724.png\"></p>\n<h3 id=\"4、Vs-Code-配置\"><a href=\"#4、Vs-Code-配置\" class=\"headerlink\" title=\"4、Vs Code 配置\"></a>4、Vs Code 配置</h3><blockquote>\n<p>文本编辑器是写代码的<strong>辅助工具</strong>，它原则上不是必需品，也不为特定编程语言服务。原则上只要是能编写<strong>纯文本文件</strong>的软件（最简单如Windows记事本），都可以编写<strong>任何语言</strong>的代码。但考虑到实际的编程体验，众多专用的编辑器被开发出来，以提供<strong>代码高亮</strong>（根据特定语言的语法给代码染色，便于阅读）、<strong>语法错误检查</strong>（在编译前提示错字漏字、不合规的语句等错误）、<strong>断点调试</strong>、<strong>多文件的管理</strong>等辅助功能。</p>\n</blockquote>\n<p>注意VS Code跟VS (Visual Studio)只是同属一家、名称相近，但不是一类软件别搞错了。</p>\n<p>这里要区分集成开发环境和开发环境</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123843.png\"></p>\n<p>修改完环境变量、安装或更新完插件后，务必<strong>重启VS Code</strong>。这类属于编辑器环境的东西，大都需重启软件才能生效。</p>\n<h2 id=\"配置C-C-的简单环境（重启VS-Code后进行！）\"><a href=\"#配置C-C-的简单环境（重启VS-Code后进行！）\" class=\"headerlink\" title=\"配置C/C++的简单环境（重启VS Code后进行！）\"></a>配置C/C++的简单环境（重启VS Code后进行！）</h2><p>这里实际上就是VS Code的具体用法，原则上并无固定章法，但几个基本点有必要提及一下：</p>\n<ol>\n<li>脑子里要有<strong>源代码文件</strong>这个概念。写程序不是说就在框框里写一堆代码然后就能跑了！代码都要<strong>写成文件保存起来（到硬盘里）</strong>，然后才有后续的工作；</li>\n<li>VS Code是支持多语言的编辑器，并不只为C/C++服务，所以还要<strong>确保把代码文件的后缀名写对</strong>，C语言的后缀名是<code>.c</code>，C++的是<code>.cpp</code>。这是VS Code区分你代码类型的标志；</li>\n<li>上面安装的”C/C++”插件提供了对这两门语言的基本支持。C跟C++是<strong>两门不同的语言</strong>，请<strong>向你的老师问清楚学的是哪一门</strong>。无论是在.c文件里敲C++代码，还是在.cpp文件里敲C代码，都是自掘天坑的行为。</li>\n<li>编写C/C++程序有两个基本步骤，一是把代码文件变成程序文件，这叫<strong>编译</strong>或<strong>生成</strong>，是调用最开始安装的编译器做的事；二才是把刚刚生成的程序跑起来，这叫<strong>执行</strong>，是操作系统做的事；</li>\n<li>这两个基本步骤，一般都是在<strong>命令行</strong>的环境下进行，输入输出也是在这里面。VS Code的优势之一，就是把系统的命令行集成进了软件内部，名唤“<strong>终端</strong>”，从而不必再开新窗口。</li>\n</ol>\n<p>进入正题，在VS Code中编写C/C++程序，<strong>不要直接新建个代码文件就开始写</strong>，应该先选择左侧“资源管理器”（两页纸的图标）后按下图操作，</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701123956.png\"></p>\n<p>或者选择菜单项【文件】→【打开文件夹…】，来<strong>打开一个工作文件夹</strong>，这样做的好处包括</p>\n<ul>\n<li><strong>VS Code中打开的一个文件夹下可以包含你一个项目或一段时期内的各种文件</strong>，便于我们分门别类、有序地组织代码；</li>\n<li><strong>这个文件夹内可以保存独立的配置</strong>（自动创建子目录<code>.vscode</code>保存配置文件，能随工作文件夹一起移动），仅在这个区域内生效而不修改用户个人的全局配置，也不会与其他文件夹的配置相冲突。对于”C/C++”插件这是必需的；</li>\n<li><strong>VS Code的集成终端在打开的文件夹内自动以该文件夹为启动目录</strong>，这样在里面编译和执行程序时可以方便地使用<strong>相对路径</strong>。</li>\n</ul>\n<blockquote>\n<p><strong>路径</strong>是对计算机中文件和文件夹的指示，是编译和执行程序的<strong>必备基础知识</strong>，如有疑问请参阅以下<a href=\"https://zhuanlan.zhihu.com/p/85455028\">扫盲贴，</a></p>\n</blockquote>\n<p>找到一个你觉得合适的<strong>文件夹</strong>打开后，你的侧边栏会变成这样</p>\n<blockquote>\n<p>注意！请务必确定选择的是“打开文件夹”而非“打开工作区”，工作区具备更强的独立特性，本文的配置方法是不适用的！<br>第一次打开时可能会自动下载”C/C++”插件的额外组件（3个），请务必确认它们下载安装成功。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124122.png\"></p>\n<h3 id=\"4、UI配置\"><a href=\"#4、UI配置\" class=\"headerlink\" title=\"4、UI配置\"></a>4、UI配置</h3><p>接下来，是要利用”C/C++”插件预定义好了的配置，稍作修改以满足我们的需要。按快捷键【Ctrl】【Shift】+【P】，打开命令面板，输入关键词”C/C++”，在弹出的诸命令中选择**编辑配置 (UI)<strong>或者</strong>Edit Configurations (UI)**，将弹出”C/C++”给我们的默认配置（JSON那个操作难度较大，有兴趣的可自行研究）。</p>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124154.png\"></p>\n<p>诸配置中最重要的是<strong>编译器路径</strong>和<strong>IntelliSense模式</strong>这两项，两者在右侧都有下拉三角。如果前面你正确配置了环境变量，路径的待选项中就会包含几个正确的编译器路径，<strong>编写C程序请选择gcc.exe，C++则选择g++.exe</strong>；模式选择<strong>gcc-x64</strong>。</p>\n<blockquote>\n<p>配置完成后你可以看到一个<code>c_cpp_properties.json</code>文件被自动保存在了<code>.vscode</code>子目录中，它只在你这个工作文件夹中生效。如果你使用一个新的工作文件夹，就重新配置一下。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124212.png\"></p>\n<blockquote>\n<p>注意<code>.vscode</code>是你工作文件夹的子目录，下次打开时注意打开的是上一级工作文件夹（比如我上面的MYCLANG，别开到<code>.vscode</code>里面去了！</p>\n</blockquote>\n<p>至此配置工作已基本完成</p>\n<h3 id=\"5、编译测试（建议重启PC）\"><a href=\"#5、编译测试（建议重启PC）\" class=\"headerlink\" title=\"5、编译测试（建议重启PC）\"></a>5、编译测试（建议重启PC）</h3><h2 id=\"编写”Hello-World”程序\"><a href=\"#编写”Hello-World”程序\" class=\"headerlink\" title=\"编写”Hello World”程序\"></a>编写”Hello World”程序</h2><p>到工作文件夹中添加一个源代码文件，命名为hello**.c**（或者任意你喜欢的名字，但注意后缀名.c别忘了打上），</p>\n<blockquote>\n<p>我这里的示例是C语言的，要试用C++的请注意后缀名为.cpp，并求教你的老师或自行编写相应代码。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/xxgn/tuchuang/raw/master/img/20200701124350.png\"></p>\n<p>输完你的代码后，按快捷键【Ctrl】+【S】</p>\n<h3 id=\"保存、\"><a href=\"#保存、\" class=\"headerlink\" title=\"保存、\"></a><strong>保</strong>存、</h3><h3 id=\"保存、-1\"><a href=\"#保存、-1\" class=\"headerlink\" title=\"保存、\"></a>保存、</h3><h3 id=\"保存！\"><a href=\"#保存！\" class=\"headerlink\" title=\"保存！\"></a>保存！</h3><p>保存后按快捷键【Ctrl】+【`】（主键盘区左上角Esc键下面那个）即可打开嵌入式终端（命令行环境），<strong>编译代码的命令</strong>为（如果是C++则将gcc替换为g++）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">gcc˽-o˽目标文件路径˽源代码文件路径<br></code></pre></td></tr></table></figure>\n\n<p>我用符号<code>˽</code>标记了空格，“目标文件”即你要生成的程序文件，起名和加不加.exe都随意（因为它会自动加）。在我们这，由于已经在打开的文件夹里，可以使用相对路径，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">gcc -o .\\myhello .\\hello.c<br></code></pre></td></tr></table></figure>\n\n<p>回车，就能编译你刚刚的hello.c文件，如果成功，则在相同目录下生成一个myhello.exe程序文件。<strong>执行程序</strong>的命令为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">程序文件路径<br></code></pre></td></tr></table></figure>\n\n<p>是的形式上就是这样，只是路径可以是绝对或相对的，当然相对的一般更方便，这里要执行上面的程序就是</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">.\\myhello.exe<br></code></pre></td></tr></table></figure>\n\n<p>注意VS Code的默认终端实际上是<strong>PowerShell，需要使用<code>.\\</code>显式地指明它是当前目录下的可执行文件</strong>，如果省略它出于安全原因会拒绝你程序的执行。</p>\n"},{"title":"xdtx djasidjasidja","index_img":"/img/1.png","banner_img":"/img/3.png","date":"2019-10-10T02:00:00.000Z","_content":"### \n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: xdtx djasidjasidja\ntags: [Hexo, Fluid]\nindex_img: /img/1.png\nbanner_img: /img/3.png\ndate: 2019-10-10 10:00:00   \n---\n### \n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2022-01-04T07:47:44.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckxzwjui20002px633uwu7z9u","content":"<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"wordcount":184,"excerpt":"","more":"<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Python库安装","_content":"{% note success %}\n文字 或者 `markdown` 均可\n{% endnote %}\n> 1、有时候安装会遇到很多问题，有时候是网络问题，有时候是代码输入问题（ 问题二： Microsoft Visual C++ 14.0 is required.（一般我们的win电脑都会缺这玩意） ）\n>\n> 2、新方法：下载下来``` whl```文件或者```zip、gz、rar```压缩包文件，放入到本地，然后启动安装即可\n\n## Python库下载网站\n\n1、 https://pypi.org/ \n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232120.png)\n\n在上面的网站搜索框写入即可\n\n2、 https://www.lfd.uci.edu/~gohlke/pythonlibs/ （这个网站里面使用Ctrl+F搜索）来自知乎 https://zhuanlan.zhihu.com/p/37995301 \n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232733.png)\n\n## 安装历程（以pyaudia为例）\n\n1、以pip install pyaudio安装的话会出现下面问题\n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232713.png)\n\n2、我们下载whl文件如下\n\n![]( https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232909.png )\n\n#### 38是指python版本，win32指的是系统型号\n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515233146.png)\n\n3、下载下来之后，安装代码如下\n\n```shell\npip install PyAudio-0.2.11-cp38-cp38-win32.whl\n```\n\n至此安装完毕！\n\n\n\n\n\n\n\n","source":"_posts/python库安装.md","raw":"\n---\ntitle: Python库安装\n---\n{% note success %}\n文字 或者 `markdown` 均可\n{% endnote %}\n> 1、有时候安装会遇到很多问题，有时候是网络问题，有时候是代码输入问题（ 问题二： Microsoft Visual C++ 14.0 is required.（一般我们的win电脑都会缺这玩意） ）\n>\n> 2、新方法：下载下来``` whl```文件或者```zip、gz、rar```压缩包文件，放入到本地，然后启动安装即可\n\n## Python库下载网站\n\n1、 https://pypi.org/ \n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232120.png)\n\n在上面的网站搜索框写入即可\n\n2、 https://www.lfd.uci.edu/~gohlke/pythonlibs/ （这个网站里面使用Ctrl+F搜索）来自知乎 https://zhuanlan.zhihu.com/p/37995301 \n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232733.png)\n\n## 安装历程（以pyaudia为例）\n\n1、以pip install pyaudio安装的话会出现下面问题\n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232713.png)\n\n2、我们下载whl文件如下\n\n![]( https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232909.png )\n\n#### 38是指python版本，win32指的是系统型号\n\n![](https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515233146.png)\n\n3、下载下来之后，安装代码如下\n\n```shell\npip install PyAudio-0.2.11-cp38-cp38-win32.whl\n```\n\n至此安装完毕！\n\n\n\n\n\n\n\n","slug":"python库安装","published":1,"date":"2022-01-04T04:23:22.445Z","updated":"2022-01-04T08:53:26.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckxzwjui40005px63c2f6ccjl","content":"<div class=\"note note-success\">\n            <p>文字 或者 <code>markdown</code> 均可</p>\n          </div>\n<blockquote>\n<p>1、有时候安装会遇到很多问题，有时候是网络问题，有时候是代码输入问题（ 问题二： Microsoft Visual C++ 14.0 is required.（一般我们的win电脑都会缺这玩意） ）</p>\n<p>2、新方法：下载下来<code> whl</code>文件或者<code>zip、gz、rar</code>压缩包文件，放入到本地，然后启动安装即可</p>\n</blockquote>\n<h2 id=\"Python库下载网站\"><a href=\"#Python库下载网站\" class=\"headerlink\" title=\"Python库下载网站\"></a>Python库下载网站</h2><p>1、 <a href=\"https://pypi.org/\">https://pypi.org/</a> </p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232120.png\"></p>\n<p>在上面的网站搜索框写入即可</p>\n<p>2、 <a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a> （这个网站里面使用Ctrl+F搜索）来自知乎 <a href=\"https://zhuanlan.zhihu.com/p/37995301\">https://zhuanlan.zhihu.com/p/37995301</a> </p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232733.png\"></p>\n<h2 id=\"安装历程（以pyaudia为例）\"><a href=\"#安装历程（以pyaudia为例）\" class=\"headerlink\" title=\"安装历程（以pyaudia为例）\"></a>安装历程（以pyaudia为例）</h2><p>1、以pip install pyaudio安装的话会出现下面问题</p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232713.png\"></p>\n<p>2、我们下载whl文件如下</p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232909.png\"></p>\n<h4 id=\"38是指python版本，win32指的是系统型号\"><a href=\"#38是指python版本，win32指的是系统型号\" class=\"headerlink\" title=\"38是指python版本，win32指的是系统型号\"></a>38是指python版本，win32指的是系统型号</h4><p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515233146.png\"></p>\n<p>3、下载下来之后，安装代码如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs shell\">pip install PyAudio-0.2.11-cp38-cp38-win32.whl<br></code></pre></td></tr></table></figure>\n\n<p>至此安装完毕！</p>\n","site":{"data":{}},"wordcount":451,"excerpt":"","more":"<div class=\"note note-success\">\n            <p>文字 或者 <code>markdown</code> 均可</p>\n          </div>\n<blockquote>\n<p>1、有时候安装会遇到很多问题，有时候是网络问题，有时候是代码输入问题（ 问题二： Microsoft Visual C++ 14.0 is required.（一般我们的win电脑都会缺这玩意） ）</p>\n<p>2、新方法：下载下来<code> whl</code>文件或者<code>zip、gz、rar</code>压缩包文件，放入到本地，然后启动安装即可</p>\n</blockquote>\n<h2 id=\"Python库下载网站\"><a href=\"#Python库下载网站\" class=\"headerlink\" title=\"Python库下载网站\"></a>Python库下载网站</h2><p>1、 <a href=\"https://pypi.org/\">https://pypi.org/</a> </p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232120.png\"></p>\n<p>在上面的网站搜索框写入即可</p>\n<p>2、 <a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a> （这个网站里面使用Ctrl+F搜索）来自知乎 <a href=\"https://zhuanlan.zhihu.com/p/37995301\">https://zhuanlan.zhihu.com/p/37995301</a> </p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232733.png\"></p>\n<h2 id=\"安装历程（以pyaudia为例）\"><a href=\"#安装历程（以pyaudia为例）\" class=\"headerlink\" title=\"安装历程（以pyaudia为例）\"></a>安装历程（以pyaudia为例）</h2><p>1、以pip install pyaudio安装的话会出现下面问题</p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232713.png\"></p>\n<p>2、我们下载whl文件如下</p>\n<p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515232909.png\"></p>\n<h4 id=\"38是指python版本，win32指的是系统型号\"><a href=\"#38是指python版本，win32指的是系统型号\" class=\"headerlink\" title=\"38是指python版本，win32指的是系统型号\"></a>38是指python版本，win32指的是系统型号</h4><p><img src=\"https://gitee.com/lemon0828/tuchuang/raw/master/img/20200515233146.png\"></p>\n<p>3、下载下来之后，安装代码如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pip install PyAudio-0.2.11-cp38-cp38-win32.whl<br></code></pre></td></tr></table></figure>\n\n<p>至此安装完毕！</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckxzwjui00001px63g2qf6wjc","category_id":"ckxzwjui30003px6368rv2sfc","_id":"ckxzwjui5000apx63372laar2"},{"post_id":"ckxzwjui00001px63g2qf6wjc","category_id":"ckxzwjui50008px632k5a1wj1","_id":"ckxzwjui5000cpx632oj059v5"}],"PostTag":[{"post_id":"ckxzwjui00001px63g2qf6wjc","tag_id":"ckxzwjui30004px63afws9k5h","_id":"ckxzwjui50007px6349s3hwao"},{"post_id":"ckxzwjui20002px633uwu7z9u","tag_id":"ckxzwjui40006px63cxsz3um7","_id":"ckxzwjui5000bpx6335k7g06y"},{"post_id":"ckxzwjui20002px633uwu7z9u","tag_id":"ckxzwjui50009px63dbb31zv4","_id":"ckxzwjui5000dpx63c7at8dqd"}],"Tag":[{"name":"小董同学","_id":"ckxzwjui30004px63afws9k5h"},{"name":"Hexo","_id":"ckxzwjui40006px63cxsz3um7"},{"name":"Fluid","_id":"ckxzwjui50009px63dbb31zv4"}]}}